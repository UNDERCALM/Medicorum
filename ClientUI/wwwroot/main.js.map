{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/home/home.component.html","webpack:///./src/app/Components/home/home.component.ts","webpack:///./src/app/Components/nav-bar/nav-bar.component.html","webpack:///./src/app/Components/nav-bar/nav-bar.component.ts","webpack:///./src/app/Components/patient-detail/patient-detail.component.html","webpack:///./src/app/Components/patient-detail/patient-detail.component.ts","webpack:///./src/app/Components/patient-list/patient-list.component.html","webpack:///./src/app/Components/patient-list/patient-list.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/patient.model.ts","webpack:///./src/app/services/medicorum-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<p>\n  home works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" routerLink=\"home\">Medicorum</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"home\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"patients\">Patients</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"clinicalhistory\">Clinical History</a>\r\n      </li>\r\n    </ul>\r\n    <form class=\"form-inline my-2 my-lg-0\" *ngIf=\"canSearch\">\r\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n  canSearch: boolean;\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.canSearch = false;\n    console.log(this.router.url);\n  }\n\n}\n","<!-- Default form login -->\r\n<form class=\"text-center border border-light p-5\">\r\n\r\n  <p class=\"h4 mb-4\">Patient</p>\r\n\r\n\r\n  <input type=\"text\" id=\"firstName\" class=\"form-control mb-4\" placeholder=\"First Name\">\r\n  <input type=\"text\" id=\"lastName\" class=\"form-control mb-4\" placeholder=\"Last Name\">\r\n  <select id=\"gender\" class=\"form-control mb-4\" placeholder=\"Gender\">\r\n    <option value=\"None\">Gender</option>\r\n    <option value=\"Male\">Male</option>\r\n    <option value=\"Female\">Female</option>\r\n  </select>\r\n  <input type=\"text\" id=\"birthDate\" class=\"form-control mb-4\" placeholder=\"BirthDate\">\"\r\n  <input type=\"text\" id=\"ssid\" class=\"form-control mb-4\" placeholder=\"Social Security Number\">\r\n  <input type=\"text\" id=\"ssid\" class=\"form-control mb-4\" placeholder=\"Driver License Number\">\r\n\r\n\r\n\r\n  <!-- Sign in button -->\r\n  <button mdbBtn color=\"info\" block=\"true\" class=\"my-4\" type=\"submit\">Subbmit</button>\r\n\r\n\r\n\r\n</form>\r\n<!-- Default form login -->\r\n","import { Component, OnInit } from '@angular/core';\nimport { Patient } from 'src/app/models/patient.model';\r\nimport { MedicorumAPIService } from 'src/app/services/medicorum-api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { CheckboxModule, WavesModule, ButtonsModule, InputsModule, IconsModule } from 'angular-bootstrap-md'\n@Component({\n  selector: 'app-patient-detail',\n  templateUrl: './patient-detail.component.html',\n  styleUrls: ['./patient-detail.component.scss']\n})\nexport class PatientDetailComponent implements OnInit {\n  patient: Patient;\n  id: number;\n  constructor(public rest: MedicorumAPIService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = +this.route.snapshot.paramMap.get(\"id\");\n\n      this.getPatient(this.id);\n    }\n      \n  \n  getPatient(id: number) {\n    this.rest.getPatient(id).subscribe((data: {}) => {\r\n      this.patient = new Patient(data);\r\n      console.log(this.patient);\r\n    });\r\n  }\n}\n","\r\n<div class=\"panel panel-default\">\r\n  <div class=\"panel-heading\"><h3>Patients List</h3></div>\r\n  <div class=\"panel-body\">\r\n    <ul class=\"list-group\" *ngIf=\"patientModel\">\r\n      <li *ngFor=\"let item of patientModel.patients\" (click)=\"goToPatient(item.patientId)\" class=\"list-group-item list-group-item-action waves-light\" mdbWavesEffect>\r\n        <span class=\"badge\" ng-if=\"item.children > 0\"></span>\r\n        {{item.firstName}} {{item.lastName}}, {{item.birthDate |  date:'MM/dd/yyyy'}}, {{item.gender}}\r\n      </li>\r\n      \r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { MedicorumAPIService } from '../../services/medicorum-api.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PatientModel, Patient } from 'src/app/models/patient.model';\r\n@Component({\r\n  selector: 'app-patient-list',\r\n  templateUrl: './patient-list.component.html',\r\n  styleUrls: ['./patient-list.component.scss']\r\n})\r\nexport class PatientListComponent implements OnInit {\r\n  @Output() canSearch: EventEmitter<boolean> = new EventEmitter();\r\n  patientModel: PatientModel;\r\n  patient: Patient;\r\n  constructor(public rest: MedicorumAPIService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getPatients();\r\n    this.canSearch.emit(true);\r\n  }\r\n  getPatients() {\r\n    \r\n    this.rest.getPatients().subscribe((data: {}) => {\r\n      this.patientModel = new PatientModel(data);\r\n    });\r\n  }\r\n  goToPatient(id: any) {\r\n    \r\n    this.router.navigateByUrl('/patient/' + id);\r\n    console.log(id);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\r\n<app-nav-bar></app-nav-bar>\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Medicorum';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MedicorumConstants } from \"./services/medicorum-constants.service\";\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PatientListComponent } from './Components/patient-list/patient-list.component';\r\nimport { ClinicalHistoryComponent } from './Components/clinical-history/clinical-history.component';\r\nimport { PatientDetailComponent } from './Components/patient-detail/patient-detail.component';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NavBarComponent } from './Components/nav-bar/nav-bar.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    data: { title: 'Patient List' }\r\n  },\r\n  {\r\n    path: 'patients',\r\n    component: PatientListComponent,\r\n    data: { title: 'Patient List' }\r\n  },\r\n  {\r\n    path: 'patient/:id',\r\n    component: PatientDetailComponent,\r\n    data: { title: 'Patient List' }\r\n  },\r\n  {\r\n    path: 'patient-add',\r\n    component: PatientDetailComponent,\r\n    data: { title: 'Patient Add' }\r\n  },\r\n  {\r\n    path: 'patient-edit/:id',\r\n    component: PatientDetailComponent,\r\n    data: { title: 'Patient Edit' }\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n@NgModule({\r\n\r\n  declarations: [\r\n    AppComponent,\r\n\r\n    PatientListComponent,\r\n    PatientDetailComponent,\r\n    ClinicalHistoryComponent,\r\n    NavBarComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes),\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BsDropdownModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  providers: [MedicorumConstants],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Patient {\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  gender: string;\r\n  driverLicenceNumber: string;\r\n  socialSecurityNumber: string;\r\n  birthDate: Date;\r\n\r\n  constructor(obj?: any) {\r\n    this.id = obj && obj.id || null;\r\n    this.firstName = obj && obj.firstName || null;\r\n    this.lastName = obj && obj.lastName || null;\r\n    this.gender = obj && obj.gender || null;\r\n    this.driverLicenceNumber = obj && obj.driverLicenceNumber || null;\r\n    this.socialSecurityNumber = obj && obj.socialSecurityNumber || null;\r\n    this.birthDate = obj && obj.birthDate || null;\r\n  }\r\n}\nexport class PatientModel {\n  createEnabled: boolean;\r\n\r\n  patients: Patient[];\r\n  constructor(obj?: any) {\r\n    this.createEnabled = obj && obj.createEnabled || null;\r\n    this.patients = obj && obj.patients as Patient[] || null;\r\n  }\n}\n","/**\r\n* MedicorumAPI Service connects to the Medicorum API\r\n* \r\n*/\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { PatientModel } from \"../models/patient.model\"\r\nexport const MEDICORUM_API_URL = \"https://localhost:44367/api/\";\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicorumAPIService {\r\n\r\n  constructor(private http: HttpClient, @Inject(MEDICORUM_API_URL) private apiUrl: string) { }\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || {};\r\n  }\r\n  getCinicalHistory(): Observable<any> {\r\n    const queryUrl = `${this.apiUrl} + 'clinicalhistory'`;\r\n\r\n    return this.http.get(queryUrl).pipe(map(this.extractData));\r\n  }\r\n\r\n  getPatients(): Observable<any> {\r\n    const queryUrl = `${this.apiUrl}patients`;\r\n    \r\n    return this.http.get( queryUrl ).pipe( map(this.extractData) );\r\n  }\r\n  getPatient(id: number): Observable<any> {\r\n\r\n    const queryUrl = `${this.apiUrl}patients/${id}`;\r\n    return this.http.get(queryUrl).pipe(map(this.extractData));\r\n  }\r\n  addPatient(patient: PatientModel) {\r\n    const queryUrl = `${this.apiUrl}patients`;\r\n    console.log(patient);\r\n    return this.http.post<any>(queryUrl, JSON.stringify(patient), httpOptions).pipe(\r\n      tap((patient) => console.log(`added product w/ id=${patient.id}`)),\r\n      catchError(this.handleError<any>('addPatient'))\r\n    );\r\n\r\n  }\r\n  updatePatient(patient: PatientModel) {\r\n\r\n    const queryUrl = `${this.apiUrl}patients`;\r\n    return this.http.post<any>(queryUrl , JSON.stringify(patient), httpOptions).pipe(\r\n      tap((patient) => console.log(`updated product w/ id=${patient.id}`)),\r\n      catchError(this.handleError<any>('updatePatient'))\r\n    );\r\n  }\r\n  deletePatient(id: number) {\r\n    const queryUrl = `${this.apiUrl}'patients/'${id}`;\r\n    return this.http.delete<any>(queryUrl + id, httpOptions).pipe(\r\n      tap(_ => console.log(`deleted product id=${id}`)),\r\n      catchError(this.handleError<any>('deletePatient'))\r\n    );\r\n  }\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}